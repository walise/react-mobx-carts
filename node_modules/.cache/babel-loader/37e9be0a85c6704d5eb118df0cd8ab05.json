{"ast":null,"code":"import _initializerDefineProperty from \"/Users/xyhua/Desktop/projects/react-mobx-carts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/xyhua/Desktop/projects/react-mobx-carts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/xyhua/Desktop/projects/react-mobx-carts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2;\n\nimport { observable, computed, action } from 'mobx';\nlet appleStore = (_dec = action.bound, _dec2 = action.bound, (_class = class appleStore {\n  constructor() {\n    _initializerDefineProperty(this, \"apples\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isPick\", _descriptor2, this);\n  }\n\n  // 获取苹果的总计\n  get Total() {\n    let options = {\n      // 当前摘掉\n      curCount: {\n        count: 0,\n        weight: 0\n      },\n      // 已吃掉\n      eatCount: {\n        count: 0,\n        weight: 0\n      }\n    }; // 判断苹果是否已被吃掉\n\n    this.apples.forEach(apple => {\n      let selector = apple.isEaten ? 'eatCount' : 'curCount';\n      options[selector].count++;\n      options[selector].weight += apple.weight;\n    });\n    console.log(options);\n    return options;\n  } // 缓存添加的数据\n\n\n  setApples() {\n    window.localStorage.setItem('apples', JSON.stringify(this.apples));\n  } // 获取缓存数据\n\n\n  getApples() {\n    this.apples = JSON.parse(window.localStorage.getItem('apples'));\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"apples\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isPick\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"Total\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"Total\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setApples\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"setApples\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getApples\", [_dec2], Object.getOwnPropertyDescriptor(_class.prototype, \"getApples\"), _class.prototype)), _class));\nexport default appleStore;","map":{"version":3,"sources":["/Users/xyhua/Desktop/projects/react-mobx-carts/src/mobx/index.jsx"],"names":["observable","computed","action","appleStore","bound","Total","options","curCount","count","weight","eatCount","apples","forEach","apple","selector","isEaten","console","log","setApples","window","localStorage","setItem","JSON","stringify","getApples","parse","getItem"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;IACMC,U,WA6BDD,MAAM,CAACE,K,UAIPF,MAAM,CAACE,K,YAjCZ,MAAMD,UAAN,CAAiB;AAAA;AAAA;;AAAA;AAAA;;AAIb;AACmB,MAALE,KAAK,GAAG;AAClB,QAAIC,OAAO,GAAG;AACV;AACAC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,CADD;AAENC,QAAAA,MAAM,EAAE;AAFF,OAFA;AAMV;AACAC,MAAAA,QAAQ,EAAE;AACNF,QAAAA,KAAK,EAAE,CADD;AAENC,QAAAA,MAAM,EAAE;AAFF;AAPA,KAAd,CADkB,CAclB;;AACA,SAAKE,MAAL,CAAYC,OAAZ,CAAoBC,KAAK,IAAI;AACzB,UAAIC,QAAQ,GAAGD,KAAK,CAACE,OAAN,GAAgB,UAAhB,GAA2B,UAA1C;AACAT,MAAAA,OAAO,CAACQ,QAAD,CAAP,CAAkBN,KAAlB;AACAF,MAAAA,OAAO,CAACQ,QAAD,CAAP,CAAkBL,MAAlB,IAA4BI,KAAK,CAACJ,MAAlC;AACH,KAJD;AAKAO,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,WAAOA,OAAP;AACH,GA3BY,CA4Bb;;;AACcY,EAAAA,SAAS,GAAE;AACrBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAqCC,IAAI,CAACC,SAAL,CAAe,KAAKZ,MAApB,CAArC;AACH,GA/BY,CAgCb;;;AACca,EAAAA,SAAS,GAAE;AACrB,SAAKb,MAAL,GAAcW,IAAI,CAACG,KAAL,CAAWN,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,QAA5B,CAAX,CAAd;AACH;;AAnCY,C,wEACZ1B,U;;;;;WAAoB,E;;0EAEpBA,U;;;;;WAAoB,I;;0DAEpBC,Q;AAgCL,eAAeE,UAAf","sourcesContent":["import { observable, computed, action } from 'mobx';\nclass appleStore {\n    @observable apples = [];\n    // 摘果子 状态 控制按钮显示\n    @observable isPick = true\n    // 获取苹果的总计\n    @computed get Total() {\n        let options = {\n            // 当前摘掉\n            curCount: {\n                count: 0,\n                weight: 0\n            },\n            // 已吃掉\n            eatCount: {\n                count: 0,\n                weight: 0\n            }\n        }\n    \n        // 判断苹果是否已被吃掉\n        this.apples.forEach(apple => {\n            let selector = apple.isEaten ? 'eatCount':'curCount';\n            options[selector].count ++;\n            options[selector].weight += apple.weight;\n        });\n        console.log(options)\n        return options\n    }\n    // 缓存添加的数据\n    @action.bound setApples(){\n        window.localStorage.setItem('apples',JSON.stringify(this.apples))\n    }\n    // 获取缓存数据\n    @action.bound getApples(){\n        this.apples = JSON.parse(window.localStorage.getItem('apples'))\n    }\n}\nexport default appleStore"]},"metadata":{},"sourceType":"module"}