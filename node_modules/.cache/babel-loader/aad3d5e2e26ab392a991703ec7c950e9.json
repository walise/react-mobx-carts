{"ast":null,"code":"import _initializerDefineProperty from \"/Users/xyhua/Desktop/projects/react-mobx-carts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/xyhua/Desktop/projects/react-mobx-carts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/xyhua/Desktop/projects/react-mobx-carts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;\n\nimport { observable, computed, action, makeObservable, autorun } from 'mobx';\nlet appleStore = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, _dec4 = action.bound, (_class = class appleStore {\n  constructor() {\n    _initializerDefineProperty(this, \"apples\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isPick\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"setApples\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"clearApples\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"insertApple\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"eatApple\", _descriptor6, this);\n\n    makeObservable(this);\n  }\n\n  // 获取苹果的总计\n  get options() {\n    let options = {\n      // 当前摘掉\n      curCount: {\n        count: 0,\n        weight: 0\n      },\n      // 已吃掉\n      eatCount: {\n        count: 0,\n        weight: 0\n      }\n    }; // 判断苹果是否已被吃掉\n\n    if (this.apples) {\n      this.apples.forEach(apple => {\n        let selector = apple.isEaten ? 'eatCount' : 'curCount';\n        options[selector].count++;\n        options[selector].weight += apple.weight;\n      });\n    }\n\n    return options;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"apples\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return JSON.parse(window.localStorage.getItem('apples')) || [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isPick\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"setApples\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return data => {\n      window.localStorage.setItem('apples', JSON.stringify(data ? data : this.apples));\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"clearApples\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.apples = [];\n      this.setApples();\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"insertApple\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      if (this.isPick) {\n        this.isPick = false;\n      } else {\n        this.isPick = true;\n      }\n\n      this.apples.push({\n        id: this.apples.length + 1,\n        weight: Math.floor(Math.random() * (250 - 200 + 1) + 200),\n        isEaten: false\n      });\n      this.setApples();\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"eatApple\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      let curIndex = '';\n      this.apples.forEach((apple, index) => {\n        if (apple.id === id) {\n          curIndex = index;\n        }\n      });\n      this.apples[curIndex].isEaten = true;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"options\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"options\"), _class.prototype)), _class));\nexport default new appleStore();","map":{"version":3,"sources":["/Users/xyhua/Desktop/projects/react-mobx-carts/src/mobx/index.js"],"names":["observable","computed","action","makeObservable","autorun","appleStore","bound","constructor","options","curCount","count","weight","eatCount","apples","forEach","apple","selector","isEaten","JSON","parse","window","localStorage","getItem","data","setItem","stringify","setApples","isPick","push","id","length","Math","floor","random","curIndex","index"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,cAAvC,EAAuDC,OAAvD,QAAqE,MAArE;IACMC,U,WAQDH,MAAM,CAACI,K,UAIPJ,MAAM,CAACI,K,UAKPJ,MAAM,CAACI,K,UAcPJ,MAAM,CAACI,K,YA/BZ,MAAMD,UAAN,CAAiB;AACbE,EAAAA,WAAW,GAAE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACTJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AAqCD;AAEe,MAAPK,OAAO,GAAG;AACd,QAAIA,OAAO,GAAG;AACV;AACAC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,CADD;AAENC,QAAAA,MAAM,EAAE;AAFF,OAFA;AAMV;AACAC,MAAAA,QAAQ,EAAE;AACNF,QAAAA,KAAK,EAAE,CADD;AAENC,QAAAA,MAAM,EAAE;AAFF;AAPA,KAAd,CADc,CAad;;AACA,QAAG,KAAKE,MAAR,EAAe;AACX,WAAKA,MAAL,CAAYC,OAAZ,CAAoBC,KAAK,IAAI;AACzB,YAAIC,QAAQ,GAAGD,KAAK,CAACE,OAAN,GAAgB,UAAhB,GAA2B,UAA1C;AACAT,QAAAA,OAAO,CAACQ,QAAD,CAAP,CAAkBN,KAAlB;AACAF,QAAAA,OAAO,CAACQ,QAAD,CAAP,CAAkBL,MAAlB,IAA4BI,KAAK,CAACJ,MAAlC;AACH,OAJD;AAKH;;AACD,WAAOH,OAAP;AACH;;AAhEY,C,wEAIZR,U;;;;;WAAoBkB,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CAAX,KAAmD,E;;0EAEvEtB,U;;;;;WAAoB,K;;;;;;;WAEIuB,IAAD,IAAQ;AAC5BH,MAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,QAA5B,EAAqCN,IAAI,CAACO,SAAL,CAAeF,IAAI,GAACA,IAAD,GAAM,KAAKV,MAA9B,CAArC;AACH,K;;;;;;;WAEyB,MAAI;AAC1B,WAAKA,MAAL,GAAc,EAAd;AACA,WAAKa,SAAL;AACH,K;;;;;;;WAEyB,MAAI;AAC1B,UAAG,KAAKC,MAAR,EAAe;AACX,aAAKA,MAAL,GAAc,KAAd;AACH,OAFD,MAEK;AACD,aAAKA,MAAL,GAAc,IAAd;AACH;;AACD,WAAKd,MAAL,CAAYe,IAAZ,CAAiB;AACfC,QAAAA,EAAE,EAAG,KAAKhB,MAAL,CAAYiB,MAAZ,GAAmB,CADT;AAEfnB,QAAAA,MAAM,EAAEoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,GAAN,GAAY,CAA7B,IAAkC,GAA7C,CAFO;AAGfhB,QAAAA,OAAO,EAAE;AAHM,OAAjB;AAKA,WAAKS,SAAL;AACH,K;;;;;;;WAEuBG,EAAD,IAAM;AACzB,UAAIK,QAAQ,GAAG,EAAf;AACA,WAAKrB,MAAL,CAAYC,OAAZ,CAAoB,CAACC,KAAD,EAAOoB,KAAP,KAAe;AAC/B,YAAGpB,KAAK,CAACc,EAAN,KAAaA,EAAhB,EAAmB;AACfK,UAAAA,QAAQ,GAAGC,KAAX;AACH;AACJ,OAJD;AAKA,WAAKtB,MAAL,CAAYqB,QAAZ,EAAsBjB,OAAtB,GAAgC,IAAhC;AACH,K;;4DAEAhB,Q;AAyBL,eAAe,IAAII,UAAJ,EAAf","sourcesContent":["import { observable, computed, action, makeObservable, autorun} from 'mobx';\nclass appleStore {\n    constructor(){\n        makeObservable(this)\n    }\n    @observable apples = JSON.parse(window.localStorage.getItem('apples'))||[];\n    // 摘果子 状态 控制按钮显示\n    @observable isPick = false\n    // 缓存添加的数据\n    @action.bound setApples=(data)=>{\n        window.localStorage.setItem('apples',JSON.stringify(data?data:this.apples))\n    }\n    // 清空数据\n    @action.bound clearApples=()=>{\n        this.apples = []\n        this.setApples()\n    }\n    // 摘苹果\n    @action.bound insertApple=()=>{\n        if(this.isPick){\n            this.isPick = false\n        }else{\n            this.isPick = true\n        }\n        this.apples.push({\n          id: (this.apples.length+1),\n          weight: Math.floor(Math.random() * (250 - 200 + 1) + 200),\n          isEaten: false\n        })\n        this.setApples()\n    }\n    // 吃苹果\n    @action.bound eatApple=(id)=>{\n        let curIndex = ''\n        this.apples.forEach((apple,index)=>{\n            if(apple.id === id){\n                curIndex = index\n            }\n        })\n        this.apples[curIndex].isEaten = true\n    }\n    // 获取苹果的总计\n    @computed \n        get options() {\n        let options = {\n            // 当前摘掉\n            curCount: {\n                count: 0,\n                weight: 0\n            },\n            // 已吃掉\n            eatCount: {\n                count: 0,\n                weight: 0\n            }\n        }\n        // 判断苹果是否已被吃掉\n        if(this.apples){\n            this.apples.forEach(apple => {\n                let selector = apple.isEaten ? 'eatCount':'curCount';\n                options[selector].count ++;\n                options[selector].weight += apple.weight;\n            });\n        }\n        return options\n    }\n}\nexport default new appleStore()"]},"metadata":{},"sourceType":"module"}